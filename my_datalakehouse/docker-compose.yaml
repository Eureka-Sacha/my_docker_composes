version: '3.7'

# 持久存储
volumes:
  dremio-data:

# 配置信息
#################### MinIO #####################
x-minio-data-dir: &minio-data-dir
  # 映射文件路径
  - ./minio/data:/data

#################### Metabase #####################
x-metabase-data-dir: &metabase-data-dir
  # 映射文件路径
  - ./metabase/dev/random:/dev/random
#  - ./metabase/plugins:/home/metabase/plugins/

#################### Spark #####################
x-spark-data-dir: &spark-data-dir
  # 映射文件路径
  - ./spark/plugins:/opt/spark/.ivy2

#################### Postgres #####################
x-postgres-data-dir: &postgres-data-dir
  # 映射文件路径
  - ./postgres/data:/var/lib/postgresql/data

x-dremio-data-dir: &dremio-data-dir
  # 映射文件路径
  #      - /var/run/docker.sock:/var/run/docker.sock #数据文件挂载
  #      - /etc/localtime:/etc/localtime:ro
  - dremio-data:/opt/dremio/data
  - dremio-data:/var/lib/dremio
  - ./dremio/config/dremio.conf:/opt/dremio/conf/dremio.conf:ro
  - ./dremio/config/dremio-env:/opt/dremio/conf/dremio-env:ro
  - ./dremio/config/core-site.xml:/opt/dremio/conf/core-site.xml:ro

#用于部署运行所依赖的基础环境组件
services:
  # 1.MinIO服务器
  minio:
    image: bitnami/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    #    deploy:
    #      resources:
    #        limits:
    #          cpus: '0.50'
    #          memory: 512M
    #        reservations:
    #          cpus: '0.25'
    #          memory: 256M
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123 #大于等于8位
      MINIO_DEFAULT_BUCKETS: datalake,dremio
    logging:
      options:
        max-size: "1024M" # 最大文件上传限制
        max-file: "10"
      driver: json-file
    volumes: *minio-data-dir
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
  # 2.spark3(包含Deleta Lake)
  # 2.1 spark-master
  spark-master:
    image: datamechanics/spark:jvm-only-3.1-latest
    hostname: spark-master
    restart: always
    container_name: spark-master
    #    network_mode: host
    command: /opt/spark/sbin/start-master.sh
    volumes: *spark-data-dir
    environment:
      - "SPARK_MASTER_HOST=spark-master"
      - "SPARK_NO_DAEMONIZE=true"
      - SPARK_MODE=master
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8180:8080"
      - "7177:7077"
  # 2.2 spark-worker
  spark-worker:
    image: datamechanics/spark:jvm-only-3.1-latest
    hostname: spark-worker
    restart: always
    container_name: spark-worker
    command: /opt/spark/sbin/start-worker.sh spark://spark-master:7077
    environment:
      - "SPARK_MASTER_HOST=spark-master"
      - "SPARK_NO_DAEMONIZE=true"
      - SPARK_MODE=worker
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8888:8080"
      - "7777:7077"
    depends_on:
      - spark-master
  # 3. dremio
  dremio:
    image: dremio/dremio-oss
    container_name: dremio
    #    command: -H unix:///var/run/docker.sock
    restart: always
      #    deploy:
      #      resources:
      #        limits:
      #          cpus: '1.0'
      #          memory: 2048M
      #        reservations:
      #          cpus: '0.5'
      #          memory: 1024M
    #    environment:
    ports:
      - "9047:9047"
      - "31010:31010"
      - "32010:32010"
      - "45678:45678"
    volumes: *dremio-data-dir

  # 4. metabase
  metabase:
    image: metabase/metabase
    container_name: metabase
    hostname: metabase
    restart: always
    volumes: *metabase-data-dir
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: metabase123
      MB_DB_HOST: postgres-secrets
      MB_PLUGINS_DIR: /home/metabase/plugins
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres-secrets
  # 4. metabase依赖的数据库
  postgres-secrets:
    image: postgres:14.0
    container_name: postgres-secrets
    hostname: postgres-secrets
    restart: always
    environment:
      POSTGRES_USER: metabase
      POSTGRES_DB: metabase
      POSTGRES_PASSWORD: metabase123
    volumes: *postgres-data-dir


  # 5.Nginx服务器
  #  nginx:
  #    image: nginx:${NGINX_VERSION}
  #    container_name: nginx
  #    restart: always
  #    ports:
  #      - "80:8080"
  #      - "7930:7930"
  #      - "9001:9001"
  #      - "9002:9002"
  #    #定义挂载点
  #    volumes:
  #      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf
  #      - ${NGINX_CONF_DIR}:/etc/nginx/conf.d
  #      - ${NGINX_LOG_DIR}:/var/log/nginx
  #      - ${NGINX_HTML_DIR}:/etc/nginx/html

